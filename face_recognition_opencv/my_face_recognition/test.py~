import cv2
import face_recognition
import numpy

video_capture = cv2.VideoCapture(0)
font = cv2.FONT_HERSHEY_DUPLEX

db = ["boehm_e", "vignes_s", "fahmi_m"]

#db = ["adam_a","akbly_s","alexan_a","allart_q","amzani_a","anton_m","argyre_j","ayad_y","baller_c","bassez_f","bazaba_a","bebe_e","bellet_j","benede_j","benito_a","bentha_i","bertin_v","bijoux_m","billau_j","boehm_e","boehm_s","bonin_c","bonnar_n","bouti_n"]#,"boutro_f","brunau_b","cadet_a","castel_a","cesaro_a","chaibi_a","chapro_v","cheval_b","cholle_a","choure_r","corcel_t","courge_r","dansok_i","dasilv_b","davain_t","daveig_a","debell_j","degre_j","delfor_l","delouv_e","deryck_n","dezeeu_l","diman_i","djamai_m","doussi_f","dubrez_s","dumas_v","dung_k","ekokae_j","elbarc_m","elgoha_r","elhorm_n","elshew_s","fahmi_m","falcio_v","fares_k","feltz_j","flaman_m","flis_l","frelat_q","fromen_t","furic_y","gallio_a","garcia_a","gerome_a","gierak_g","godefr_s","gracia_g","grondi_m","groule_f","guerin_a","guerin_r","guiber_t","guisla_s","gunzbu_a","hascou_a","hassan_j","hochar_n","hulot_f","huret_a","ip_a","irican_f","jack_l","kamoko_p","kherfi_a","kouass_u","kridag_f","kussel_n","labadi_g","lalos_b","lamech_h","lancie_a","laport_j","lasjun_s","lecalv_v","legore_r","lenour_c","leruez_g","levani_e","lim_c","lin_d","loizea_t","lozyns_a","marcho_i","masera_m","maxwel_s","mazlou_c","mesrat_n","meunie_m","morard_m","mo_d","nakach_t","nguyen_c","nguyen_v","novose_s","otto_a","pakel_l","paris_e","patin_a","plard_g","plisso_v","radjap_j","raguen_p","rasami_r","ratabo_a","rentet_t","rousse_k","roux_a","sahli_k","saint-_d","sanche_g","sargen_d","schatt_a","shao_c","simon_j","tahar_w","tan_k","thanga_j","thierr_m","tokpah_m","toure_m","traore_b","vignes_s","vrigna_c","wood_h","yousse_s","zerfao_m","zucco_j"]
target = []

for name in db:
    target.append([name,face_recognition.load_image_file("./faces/"+name+".jpg")])

SCALE_FACTOR = 6

while True:
    ret, frame = video_capture.read()
    unknown_image = cv2.resize(frame, (0, 0), fx=1/float(SCALE_FACTOR), fy=1/float(SCALE_FACTOR))
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break


    for obj in target:
        face = obj[1]
        biden_encoding = face_recognition.face_encodings(face)[0]
        tmp_unknown_encoding = face_recognition.face_encodings(unknown_image)
        if len(tmp_unknown_encoding) > 0:
            unknown_encoding = tmp_unknown_encoding[0]
            results = face_recognition.compare_faces([biden_encoding], unknown_encoding)
            if results[0] == True:
                face_location = face_recognition.face_locations(unknown_image)[0]
                top, right, bottom, left = face_location
                top *= SCALE_FACTOR
                right *= SCALE_FACTOR
                bottom *= SCALE_FACTOR
                left *= SCALE_FACTOR

                cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)
                cv2.putText(frame, obj[0], (left + 6, bottom - 6), font, 1.0, (255, 255, 255), 1)

    cv2.imshow('Video', frame)
